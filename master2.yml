apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: null
  generation: 1
  labels:
    run: master2
  name: master2
  selfLink: /apis/extensions/v1beta1/namespaces//deployments/master1
spec:
  replicas: 3
  selector:
    matchLabels:
      run: master2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: master2
    spec:
      containers:
      - command:
        - /usr/local/bin/kube-apiserver
        - --admission-control=NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
        - --runtime-config=api/v1
        - --allow-privileged=true
        - --insecure-bind-address=0.0.0.0
        - --bind-address=0.0.0.0
        - --insecure-port=8080
        - --secure-port=6443
        - --service-cluster-ip-range=10.100.0.0/24
        - --etcd-servers=http://etcd-client:2379
        - --etcd-prefix="/master2/"
        image: gcr.io/google_containers/kube-apiserver:v1.3.4
        imagePullPolicy: Always
        name: kube-apiserver
      - command:
        - /usr/local/bin/kube-controller-manager
        - --master=http://127.0.0.1:8080
        - --leader-elect=true
        image: gcr.io/google_containers/kube-controller-manager:v1.3.4
        imagePullPolicy: Always
        name: kube-controller-manager
      - command:
        - /usr/local/bin/kube-scheduler
        - --master=http://127.0.0.1:8080
        - --leader-elect=true
        image: gcr.io/google_containers/kube-scheduler:v1.3.4
        imagePullPolicy: Always
        name: kube-scheduler
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
